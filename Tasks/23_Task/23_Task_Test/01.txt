1






Для решения этой задачи через динамическое программирование мы можем использовать подход с заполнением массива,
где каждый элемент i будет хранить минимальное количество операций для достижения числа i из числа 1.

Для этого мы будем проходиться по всем числам от 1 до N, и для каждого числа будем рассчитывать минимальное
количество операций, используя значения уже рассчитанных чисел.

Создадим массив dp, где dp[i] будет хранить минимальное количество операций для достижения числа i.
Инициализируем dp[1] = 0, так как число 1 уже является искомым числом, и для него не требуется никаких операций.

Затем для каждого числа i от 2 до N мы будем рассчитывать минимальное количество операций, используя
значения уже рассчитанных чисел, и сохранять результат в dp[i]. Для этого мы будем проходиться по всем
возможным операциям и выбирать ту, которая даст наименьшее количество операций.



Здесь мы сначала создаем два массива: dp для хранения количества операций и prev для хранения
предыдущего числа на пути к числу N. Затем мы проходимся по всем числам от 2 до N и рассчитываем
минимальное количество операций для каждого числа, используя значения уже рассчитанных чисел.

Для каждого числа мы сначала добавляем 1 к количеству операций для предыдущего числа, так как это
операция, которая всегда может быть выполнена. Затем мы проверяем, можем ли мы умножить число на 2 или 3,
и если результат меньше N и количество операций меньше, чем